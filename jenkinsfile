pipeline {
    agent any
 
    stages {
        stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters(
                                [[$class: 'ChoiceParameter', 
                                    choiceType: 'PT_SINGLE_SELECT', 
                                    description: 'Would you want to start the testing stage', 
                                    filterLength: 1, 
                                    filterable: false, 
                                    name: 'Env', 
                                    script: [
                                        $class: 'GroovyScript', 
                                        fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: 
                                                "return['Could not get The environemnts']"
                                        ], 
                                        script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: 
                                                "return['yes','no']"
                                        ]
                                    ]
                                ],
                                [$class: 'CascadeChoiceParameter', 
                                    choiceType: 'PT_SINGLE_SELECT', 
                                    description: 'Select the scanning type',
                                    name: 'Scanning Type', 
                                    referencedParameters: 'Env', 
                                    script: 
                                        [$class: 'GroovyScript', 
                                        fallbackScript: [
                                                classpath: [], 
                                                sandbox: false, 
                                                script: "return['Could not get Environment from Env Param']"
                                                ], 
                                        script: [
                                                classpath: [], 
                                                sandbox: false, 
                                                script: '''
                                                if (Env.equals("yes")){
                                                    return["baseline", "fullscan"]
                                                }
                                                '''
                                            ] 
                                    ]
                                ]
                                ]
                            )])
                            }
                            }
                            }
        stage('Git_checkout') {
            steps {
               
                git 'https://github.com/somu1679/terraformsomu.git'

            }

        }
    stage('Copy files to tmp folder') {
            steps {
                script {
               if ( "1" == "1" ) {
                   sh '''
                   rm -rf branch
                   echo "${GIT_BRANCH}" >> branch
                   gitbranch=$(cat branch | awk -F/ '{print $2}')
                   echo ${gitbranch}
                   '''
               dir("${WORKSPACE}/somu") {
                   
                   sh 'sudo cp main.tf ${WORKSPACE}'
               }
               }else {
                   echo "files added"

        }
               }
                }
            }
    }
}
